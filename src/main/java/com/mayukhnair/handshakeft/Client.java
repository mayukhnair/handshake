/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.mayukhnair.handshakeft;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import javax.swing.JOptionPane;
/**
 *
 * @author nairm_000
 */
public class Client extends javax.swing.JFrame {

    /**
     * Creates new form Client
     */
    public Client() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TitleLabel = new javax.swing.JLabel();
        VersionLabel = new javax.swing.JLabel();
        ykPanel = new javax.swing.JPanel();
        infolabel1 = new javax.swing.JLabel();
        infolabel3 = new javax.swing.JLabel();
        infolabel2 = new javax.swing.JLabel();
        KeyField = new javax.swing.JTextField();
        CopyButton = new javax.swing.JButton();
        fkPanel = new javax.swing.JPanel();
        FriendKeyField = new javax.swing.JTextField();
        infolabel4 = new javax.swing.JLabel();
        infolabel5 = new javax.swing.JLabel();
        PasteButton = new javax.swing.JButton();
        FileDirPanel = new javax.swing.JPanel();
        uptrackbrowseButton = new javax.swing.JButton();
        uptrackfileTF = new javax.swing.JTextField();
        infolabel6 = new javax.swing.JLabel();
        downtrackfiletf = new javax.swing.JTextField();
        downtrackbrowsebutton = new javax.swing.JButton();
        infolabel7 = new javax.swing.JLabel();
        Exit = new javax.swing.JButton();
        transferButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HandShake File Transfer");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        TitleLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        TitleLabel.setText("Handshake File Transfer");

        VersionLabel.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        VersionLabel.setText("v1.0 Antimony ");

        ykPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Your Handshake key", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 102, 255))); // NOI18N

        infolabel1.setText("This here is your Handshake key.");

        infolabel3.setText("Handshake to connect to each other.");

        infolabel2.setText(" Pass this on to the other guy using");

        KeyField.setEditable(false);
        KeyField.setFont(new java.awt.Font("Palatino Linotype", 2, 14)); // NOI18N
        KeyField.setText("Please wait....");
        KeyField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeyFieldActionPerformed(evt);
            }
        });

        CopyButton.setText("Copy");
        CopyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ykPanelLayout = new javax.swing.GroupLayout(ykPanel);
        ykPanel.setLayout(ykPanelLayout);
        ykPanelLayout.setHorizontalGroup(
            ykPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ykPanelLayout.createSequentialGroup()
                .addGroup(ykPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(KeyField)
                    .addGroup(ykPanelLayout.createSequentialGroup()
                        .addGroup(ykPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(infolabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(infolabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(ykPanelLayout.createSequentialGroup()
                        .addComponent(infolabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CopyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        ykPanelLayout.setVerticalGroup(
            ykPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ykPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(KeyField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(infolabel1)
                .addGap(6, 6, 6)
                .addComponent(infolabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ykPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infolabel3)
                    .addComponent(CopyButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        fkPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Your friend's Handshake key", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 102, 255))); // NOI18N

        FriendKeyField.setFont(new java.awt.Font("Palatino Linotype", 2, 14)); // NOI18N
        FriendKeyField.setForeground(new java.awt.Color(204, 204, 204));
        FriendKeyField.setText("Paste the key here...");
        FriendKeyField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                FriendKeyFieldFocusGained(evt);
            }
        });
        FriendKeyField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FriendKeyFieldMouseClicked(evt);
            }
        });

        infolabel4.setText("Ask your friend to send you his Handshake key");

        infolabel5.setText("and paste it above to initiate connection.");

        PasteButton.setText("Paste");
        PasteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fkPanelLayout = new javax.swing.GroupLayout(fkPanel);
        fkPanel.setLayout(fkPanelLayout);
        fkPanelLayout.setHorizontalGroup(
            fkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fkPanelLayout.createSequentialGroup()
                .addGroup(fkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FriendKeyField)
                    .addGroup(fkPanelLayout.createSequentialGroup()
                        .addComponent(infolabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(fkPanelLayout.createSequentialGroup()
                        .addComponent(infolabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addComponent(PasteButton)))
                .addContainerGap())
        );
        fkPanelLayout.setVerticalGroup(
            fkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fkPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FriendKeyField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(fkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fkPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(infolabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(infolabel5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(fkPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PasteButton)
                        .addContainerGap())))
        );

        FileDirPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "File directories", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 102, 255))); // NOI18N

        uptrackbrowseButton.setText("Browse");

        infolabel6.setText("Which files would you like to send?");

        downtrackbrowsebutton.setText("Browse");

        infolabel7.setText("Where should incoming files be saved?");

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        transferButton.setText("Transfer");
        transferButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FileDirPanelLayout = new javax.swing.GroupLayout(FileDirPanel);
        FileDirPanel.setLayout(FileDirPanelLayout);
        FileDirPanelLayout.setHorizontalGroup(
            FileDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FileDirPanelLayout.createSequentialGroup()
                .addGroup(FileDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FileDirPanelLayout.createSequentialGroup()
                        .addGroup(FileDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(downtrackfiletf)
                            .addComponent(uptrackfileTF))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(FileDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(downtrackbrowsebutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(uptrackbrowseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(FileDirPanelLayout.createSequentialGroup()
                        .addGroup(FileDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(infolabel6)
                            .addComponent(infolabel7))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(FileDirPanelLayout.createSequentialGroup()
                        .addComponent(transferButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Exit)))
                .addContainerGap())
        );
        FileDirPanelLayout.setVerticalGroup(
            FileDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FileDirPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FileDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uptrackfileTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uptrackbrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infolabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FileDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(downtrackfiletf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(downtrackbrowsebutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infolabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(FileDirPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Exit)
                    .addComponent(transferButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FileDirPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ykPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TitleLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(VersionLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fkPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VersionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fkPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ykPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(FileDirPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Thread getIpAddr=new Thread(new Runnable(){
           public void run(){
             HandshakeKeygen hk=new HandshakeKeygen();
               try {
                   System.out.println("Handshake File Transfer v1.0 Antimony (C) 2015 Mayukh Nair");
                   String key=hk.GetHandshakeKey();
                   KeyField.setText(key);
                   System.out.println("Your Handshake key is: "+key);
               } catch (Exception ex) {
                   JOptionPane.showMessageDialog(null, "Uh-oh: "+ex.getMessage());
               }
           } 
        });
        getIpAddr.start();
    }//GEN-LAST:event_formWindowOpened

    private void KeyFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeyFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KeyFieldActionPerformed

    private void CopyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopyButtonActionPerformed
        // TODO add your handling code here:
        String key=KeyField.getText();
        StringSelection st=new StringSelection(key);
        Clipboard clip=Toolkit.getDefaultToolkit().getSystemClipboard();
        clip.setContents(st, null);
    }//GEN-LAST:event_CopyButtonActionPerformed

    private void FriendKeyFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FriendKeyFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_FriendKeyFieldMouseClicked

    private void FriendKeyFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FriendKeyFieldFocusGained
        // TODO add your handling code here:
       String chk=FriendKeyField.getText();
       if(chk.equalsIgnoreCase("Paste the key here...")){
        FriendKeyField.setText("");
        FriendKeyField.setForeground(Color.black);
       }
    }//GEN-LAST:event_FriendKeyFieldFocusGained

    private void PasteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasteButtonActionPerformed
        // TODO add your handling code here:
        Clipboard clip=Toolkit.getDefaultToolkit().getSystemClipboard();
        Transferable trans=clip.getContents(null);
        try{
            if(trans!=null && trans.isDataFlavorSupported(DataFlavor.stringFlavor)){
                String pasty=(String)trans.getTransferData(DataFlavor.stringFlavor);
            FriendKeyField.setForeground(Color.black);
        FriendKeyField.setText(pasty);
            }
        }
        catch(Exception ex){
                    JOptionPane.showMessageDialog(null,"Uh-oh: "+ex.getMessage());
                    }
        
    }//GEN-LAST:event_PasteButtonActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void transferButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferButtonActionPerformed
        // TODO add your handling code here:
       Thread initiateTransferThread=new Thread(new Runnable(){
           public void run(){
       try{
            HandshakeDecryptor decr=new HandshakeDecryptor();
        String friendAddr=decr.decryptFriendKey(FriendKeyField.getText());
        System.out.println("Friend's IP address is: "+friendAddr);
        HandshakeFTPServer server=new HandshakeFTPServer();
        server.StartFTPServer();
        
       }
       catch(Exception e){
           JOptionPane.showMessageDialog(null, "Uh-oh: "+e.getMessage());
       }
           }
       });
       initiateTransferThread.start();
        
    }//GEN-LAST:event_transferButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CopyButton;
    private javax.swing.JButton Exit;
    private javax.swing.JPanel FileDirPanel;
    private javax.swing.JTextField FriendKeyField;
    private javax.swing.JTextField KeyField;
    private javax.swing.JButton PasteButton;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JLabel VersionLabel;
    private javax.swing.JButton downtrackbrowsebutton;
    private javax.swing.JTextField downtrackfiletf;
    private javax.swing.JPanel fkPanel;
    private javax.swing.JLabel infolabel1;
    private javax.swing.JLabel infolabel2;
    private javax.swing.JLabel infolabel3;
    private javax.swing.JLabel infolabel4;
    private javax.swing.JLabel infolabel5;
    private javax.swing.JLabel infolabel6;
    private javax.swing.JLabel infolabel7;
    private javax.swing.JButton transferButton;
    private javax.swing.JButton uptrackbrowseButton;
    private javax.swing.JTextField uptrackfileTF;
    private javax.swing.JPanel ykPanel;
    // End of variables declaration//GEN-END:variables
}
